# Multi-stage build for optimized Jetson Nano compatibility
ARG PYTHON_VERSION=3.9
FROM python:${PYTHON_VERSION}-slim as base

# Build arguments
ARG DEBIAN_FRONTEND=noninteractive
ARG BUILD_DATE
ARG VERSION=1.0

# Labels
LABEL maintainer="oyster-detection-team"
LABEL version="${VERSION}"
LABEL build-date="${BUILD_DATE}"
LABEL description="Optimized Stereo Oyster Detection for Jetson Nano"

# System dependencies optimized for size
RUN apt-get update && apt-get install -y --no-install-recommends \
    libglib2.0-0 \
    libsm6 \
    libxext6 \
    libxrender-dev \
    libgomp1 \
    libglib2.0-0 \
    libgtk-3-0 \
    libavcodec58 \
    libavformat58 \
    libswscale5 \
    rsync \
    && rm -rf /var/lib/apt/lists/* \
    && apt-get clean

# Python dependencies
FROM base as python-deps

# Install optimized Python packages
COPY requirements-optimized.txt /tmp/
RUN pip install --no-cache-dir --upgrade pip setuptools wheel && \
    pip install --no-cache-dir -r /tmp/requirements-optimized.txt && \
    python -c "import cv2; print('OpenCV:', cv2.__version__)" && \
    python -c "import onnxruntime; print('ONNX Runtime:', onnxruntime.__version__)"

# Production stage
FROM python-deps as production

# Working directory
WORKDIR /workspace

# Copy optimized detection script
COPY stereoDetectionOptimized.py /workspace/
COPY stereoDetection.py /workspace/  
COPY calibration_utils.py /workspace/ 2>/dev/null || true

# Copy system check script
COPY docker/system_check.sh /workspace/ 2>/dev/null || true

# Set environment variables for optimization
ENV PYTHONUNBUFFERED=1 \
    PYTHONDONTWRITEBYTECODE=1 \
    OMP_NUM_THREADS=4 \
    OPENCV_LOG_LEVEL=ERROR \
    ONNXRUNTIME_LOG_SEVERITY_LEVEL=3

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=5s --retries=3 \
  CMD python -c "import cv2, onnxruntime; print('OK')" || exit 1

# Default command
CMD ["python", "stereoDetectionOptimized.py", "--help"]
